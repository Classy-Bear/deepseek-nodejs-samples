import OpenAI from "openai";
import fs from "fs";
import dotenv from "dotenv";
dotenv.config();

const apiKey = fs.readFileSync(process.env.API_KEY_FILE, 'utf8').trim();
if (!apiKey) {
    throw new Error("API key is not defined. Please check your environment variables or Docker secrets configuration.");
}
const baseURL = 'https://api.deepseek.com';
const baseURLBeta = 'https://api.deepseek.com/beta';
const deepseek = new OpenAI({ apiKey, baseURL });
const deepseekBeta = new OpenAI({ apiKey, baseURL: baseURLBeta });

const explainBibleVerse = (bibleVerse) => deepseek.chat.completions.create({
    model: "deepseek-chat",
    messages: [
        { role: "system", content: "You are a bible study expert. When you are given a bible verse, you will provide a summary of the verse that is easy to understand." },
        {
            role: "user",
            content: `Explain the meaning of the bible verse: ${bibleVerse}`,
        },
    ],
});

/**
 * Generates a Fibonacci sequence implementation using DeepSeek's Fill-In-the-Middle (FIM) API
 * This function uses the beta version of DeepSeek's API to complete a Python Fibonacci function
 * where the middle part of the implementation is generated by the AI.
 * 
 * @async
 * @function fibonacciFMI
 * @returns {Promise<Object>} The API response containing the completed Fibonacci implementation
 * @example
 * const response = await fibonacciFMI();
 * console.log(response.choices[0].text);
 * // Expected output might be something like:
 * //    if a <= 1:
 * //        return a
 * 
 * @throws {Error} If the API request fails
 * @note Requires beta API endpoint (https://api.deepseek.com/beta)
 */
const fibonacciFMI = () => deepseekBeta.completions.create({
    model: "deepseek-chat",
    prompt: "def fib(a):",
    suffix: "    return fib(a-1) + fib(a-2)",
    max_tokens: 128
});

const main = async () => {
    const textOutput = await explainBibleVerse("Proverbs 17:3");
    console.log(textOutput.choices[0].message);
}
main();
